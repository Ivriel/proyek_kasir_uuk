<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout Page</title>
    <link rel="stylesheet" href="/css/style.css">
    
</head>
<body>
    <%- include('layout/sidebar') %>
    <div class="checkout-container">
        <h1 class="checkout-title">Keranjang Belanja</h1>
        <% if (keranjang && keranjang.length > 0) { %>
            <table class="cart-items">
                <thead>
                    <tr class="checkout-table-title">
                        <th>Produk</th>
                        <th>Jumlah</th>
                        <th>Harga</th>
                        <th>Subtotal</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% let total = 0 %>
                    <% let index = 0%>
                    <% keranjang.forEach(item => { 
                        const subtotal = item.jumlah * item.harga; // subtotal buat tiap produk
                        total += subtotal; // total semuanya
                    %>
                        <tr>
                            <td><%= item.nama %></td>
                            <td><%= item.jumlah %></td>
                            <td>Rp <%= item.harga.toLocaleString() %></td>
                            <td>Rp <%= subtotal.toLocaleString() %></td>
                            <td><a href="/pembelian/delete/<%= index %>" class="delete-item-cart">Hapus</a></td>
                        </tr>
                    <% index++}) %>
                </tbody>
            </table>
            <div class="total">
                Total: Rp <%= total.toLocaleString() %>
            </div>
            <button onclick="handleCheckout()" class="btn-pay" id="payButton">Bayar</button>
        <% } else { %>
            <p class="empty-text">Keranjang belanja kosong</p>
            <a href="/produk/pelanggan" class="btn-cta">Belanja Sekarang!</a>
        <% } %>
    </div>

    <script>
        async function handleCheckout() {
            const payButton = document.getElementById('payButton');
            try {
                // Disable button and show loading state
                payButton.disabled = true;
                payButton.textContent = 'Memproses...';

                // Make the request to process payment
                const response = await fetch('/pembelian/pembayaran', {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/pdf'
                    }
                });

                if (!response.ok) {
                    throw new Error('Payment processing failed');
                }

                // Get the blob from the response
                const blob = await response.blob();
                
                // Create a download link
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `invoice-${Date.now()}.pdf`;
                document.body.appendChild(a);
                a.click();
                
                // Clean up
                window.URL.revokeObjectURL(url);
                document.body.removeChild(a);

                // Redirect to products page after a short delay
                setTimeout(() => {
                    window.location.reload();
                }, 1000);

            } catch (error) {
                console.error('Checkout error:', error);
                alert('Terjadi kesalahan saat memproses pembayaran. Silakan coba lagi.');
                
                // Reset button state
                payButton.disabled = false;
                payButton.textContent = 'Bayar';
            }
        }
    </script>
</body>
</html>